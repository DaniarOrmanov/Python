# 5. Реализовать структуру «Рейтинг», представляющую собой
# не возрастающий набор натуральных чисел. У пользователя необходимо
# запрашивать новый элемент рейтинга. Если в рейтинге существуют
# элементы с одинаковыми значениями, то новый элемент с тем же значением
# должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например,
# my_list = [7, 5, 3, 3, 2].

from random import randint

limits = [1, 20]                             # диапазон, из которого брать числа для формирования последовательности
numbers = 10                                 # количество чисел в последовательности
my_list = [randint(limits[0], limits[1]+1) for i in range(numbers)]
my_list.sort()
my_list.reverse()
print(f'Исходная последовательность: {my_list}')

number = input(f'\nВведите натуральное число от {limits[0]} до {limits[1]} включительно: ')
try:
    float(number)
except ValueError:
    print('Вы ввели не то.')
else:
    if float(number) > limits[0] and float(number) <= limits[1] and float(number) == int(number):
        number = int(number)
        j = 0
        for i in my_list:
            if number > i:
                my_list.insert(j, number)
                break
            j += 1
        print(f'Искомая последовательность: {my_list}')
    else:
        print(f'Надо ввести натуральное число от {limits[0]} до {limits[1]}.')
