# 3. Создайте собственный класс-исключение, который должен
# проверять содержимое списка на наличие только чисел. Проверить
# работу исключения на реальном примере. Необходимо запрашивать у
# пользователя данные и заполнять список. Класс-исключение должен
# контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются
# бесконечно, пока пользователь сам не остановит работу скрипта, введя,
# например, команду “stop”. При этом скрипт завершается, сформированный
# список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить
# только числа и строки. При вводе пользователем очередного элемента
# необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить
# пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.

class Exc:

    @staticmethod
    def numbers_only(el):
        try:
            float(el)
        except ValueError:
            if el == 'stop':
                print(f'Список данных такой: {data_list}.')
                quit()
            else:
                print('Вы ввели не число!')
        else:
            data_list.append(float(el))
            print(f'Число {float(el)} добавлено в список.')


data_list = list()
while True:
    element = input('Введите число: ')
    Exc.numbers_only(element)




